"""create account table

Revision ID: 91f55a0bc46b
Revises: 
Create Date: 2024-03-28 20:07:25.913383

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '91f55a0bc46b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('check_list',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('change_from', sa.Uuid(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_check_list_author_id'), 'check_list', ['author_id'], unique=False)
    op.create_index(op.f('ix_check_list_project_id'), 'check_list', ['project_id'], unique=False)
    op.create_table('project_editor_relationship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'project_id')
    )
    op.create_table('project_viewer_relationship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'project_id')
    )
    op.create_table('test_case',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('change_from', sa.Uuid(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_case_author_id'), 'test_case', ['author_id'], unique=False)
    op.create_index(op.f('ix_test_case_project_id'), 'test_case', ['project_id'], unique=False)
    op.create_table('test_run',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('performer_id', sa.Uuid(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_run_author_id'), 'test_run', ['author_id'], unique=False)
    op.create_index(op.f('ix_test_run_project_id'), 'test_run', ['project_id'], unique=False)
    op.create_table('test_suite',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('change_from', sa.Uuid(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_suite_author_id'), 'test_suite', ['author_id'], unique=False)
    op.create_index(op.f('ix_test_suite_project_id'), 'test_suite', ['project_id'], unique=False)
    op.create_table('bug',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('importance', sa.String(), nullable=False),
    sa.Column('finder_id', sa.Uuid(), nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=True),
    sa.Column('check_list_id', sa.Integer(), nullable=True),
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['check_list_id'], ['check_list.id'], ),
    sa.ForeignKeyConstraint(['finder_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.id'], ),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bug_check_list_id'), 'bug', ['check_list_id'], unique=False)
    op.create_index(op.f('ix_bug_finder_id'), 'bug', ['finder_id'], unique=False)
    op.create_index(op.f('ix_bug_project_id'), 'bug', ['project_id'], unique=False)
    op.create_index(op.f('ix_bug_test_case_id'), 'bug', ['test_case_id'], unique=False)
    op.create_index(op.f('ix_bug_test_run_id'), 'bug', ['test_run_id'], unique=False)
    op.create_table('check_list_execution',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('check_list_id', sa.Integer(), nullable=False),
    sa.Column('result', sa.String(), nullable=False),
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['check_list_id'], ['check_list.id'], ),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_check_list_execution_check_list_id'), 'check_list_execution', ['check_list_id'], unique=False)
    op.create_index(op.f('ix_check_list_execution_test_run_id'), 'check_list_execution', ['test_run_id'], unique=False)
    op.create_table('check_list_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('check_list_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['check_list_id'], ['check_list.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_check_list_item_check_list_id'), 'check_list_item', ['check_list_id'], unique=False)
    op.create_table('check_list_relationship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.Column('check_list_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['check_list_id'], ['check_list.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suite.id'], ),
    sa.PrimaryKeyConstraint('id', 'test_suite_id', 'check_list_id')
    )
    op.create_table('test_case_execution',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.Column('result', sa.String(), nullable=False),
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.id'], ),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_case_execution_test_case_id'), 'test_case_execution', ['test_case_id'], unique=False)
    op.create_index(op.f('ix_test_case_execution_test_run_id'), 'test_case_execution', ['test_run_id'], unique=False)
    op.create_table('test_case_relationship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suite.id'], ),
    sa.PrimaryKeyConstraint('id', 'test_suite_id', 'test_case_id')
    )
    op.create_table('test_case_step',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('expected_result', sa.String(), nullable=True),
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_case_step_test_case_id'), 'test_case_step', ['test_case_id'], unique=False)
    op.create_table('test_run_relationship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_run.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suite.id'], ),
    sa.PrimaryKeyConstraint('id', 'test_run_id', 'test_suite_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_run_relationship')
    op.drop_index(op.f('ix_test_case_step_test_case_id'), table_name='test_case_step')
    op.drop_table('test_case_step')
    op.drop_table('test_case_relationship')
    op.drop_index(op.f('ix_test_case_execution_test_run_id'), table_name='test_case_execution')
    op.drop_index(op.f('ix_test_case_execution_test_case_id'), table_name='test_case_execution')
    op.drop_table('test_case_execution')
    op.drop_table('check_list_relationship')
    op.drop_index(op.f('ix_check_list_item_check_list_id'), table_name='check_list_item')
    op.drop_table('check_list_item')
    op.drop_index(op.f('ix_check_list_execution_test_run_id'), table_name='check_list_execution')
    op.drop_index(op.f('ix_check_list_execution_check_list_id'), table_name='check_list_execution')
    op.drop_table('check_list_execution')
    op.drop_index(op.f('ix_bug_test_run_id'), table_name='bug')
    op.drop_index(op.f('ix_bug_test_case_id'), table_name='bug')
    op.drop_index(op.f('ix_bug_project_id'), table_name='bug')
    op.drop_index(op.f('ix_bug_finder_id'), table_name='bug')
    op.drop_index(op.f('ix_bug_check_list_id'), table_name='bug')
    op.drop_table('bug')
    op.drop_index(op.f('ix_test_suite_project_id'), table_name='test_suite')
    op.drop_index(op.f('ix_test_suite_author_id'), table_name='test_suite')
    op.drop_table('test_suite')
    op.drop_index(op.f('ix_test_run_project_id'), table_name='test_run')
    op.drop_index(op.f('ix_test_run_author_id'), table_name='test_run')
    op.drop_table('test_run')
    op.drop_index(op.f('ix_test_case_project_id'), table_name='test_case')
    op.drop_index(op.f('ix_test_case_author_id'), table_name='test_case')
    op.drop_table('test_case')
    op.drop_table('project_viewer_relationship')
    op.drop_table('project_editor_relationship')
    op.drop_index(op.f('ix_check_list_project_id'), table_name='check_list')
    op.drop_index(op.f('ix_check_list_author_id'), table_name='check_list')
    op.drop_table('check_list')
    op.drop_table('user')
    op.drop_table('project')
    # ### end Alembic commands ###
